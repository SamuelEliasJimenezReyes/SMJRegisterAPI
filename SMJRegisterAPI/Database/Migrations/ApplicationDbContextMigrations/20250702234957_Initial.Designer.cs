// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SMJRegisterAPI.Database.Contexts;

#nullable disable

namespace SMJRegisterAPI.Database.Migrations.ApplicationDbContextMigrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250702234957_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SMJRegisterAPI.Entities.Camper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("ChurchId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Genero");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGrant")
                        .HasColumnType("boolean")
                        .HasColumnName("Becado");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Apellido");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nombre");

                    b.Property<int>("PaidAmount")
                        .HasColumnType("integer")
                        .HasColumnName("CantidadPaga");

                    b.HasKey("ID");

                    b.HasIndex("ChurchId");

                    b.ToTable("Campers", (string)null);
                });

            modelBuilder.Entity("SMJRegisterAPI.Entities.Church", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Conference")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Conferencia");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("PrimerNombre");

                    b.HasKey("ID");

                    b.ToTable("Iglesias", (string)null);
                });

            modelBuilder.Entity("SMJRegisterAPI.Entities.Camper", b =>
                {
                    b.HasOne("SMJRegisterAPI.Entities.Church", "Church")
                        .WithMany("Campers")
                        .HasForeignKey("ChurchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Church");
                });

            modelBuilder.Entity("SMJRegisterAPI.Entities.Church", b =>
                {
                    b.Navigation("Campers");
                });
#pragma warning restore 612, 618
        }
    }
}
